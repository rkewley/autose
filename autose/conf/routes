# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Courses Routes
GET     /homeCourses/:id						controllers.CoursesController.homeCourses(id: Long)
GET     /listCourses							controllers.CoursesController.listCourses
GET     /listAllCourses							controllers.CoursesController.listAllCourses
GET		/showCourses/:id						controllers.CoursesController.show(id: Long)
GET		/publishCourses/:idCourse:idProgram						controllers.CoursesController.publish(idCourse: Long, idProgram: Long)
GET		/abet/:idCourse:idProgram								controllers.CoursesController.abet(idCourse: Long, idProgram: Long)
GET 	/editCourses/:id						controllers.CoursesController.edit(id: Long)
GET 	/createCourses/:id						controllers.CoursesController.create(id: Long)
GET 	/copyCourses/:id						controllers.CoursesController.copyCourses(id: Long)
POST	/deleteCourses/:id						controllers.CoursesController.delete(id: Long)
POST 	/saveCourses/:newEntry/:copyEntry/:originalCourse		controllers.CoursesController.saveCourses(newEntry: Int, copyEntry: Int, originalCourse: Long)


# Faculty Routes
GET     /listFaculty							controllers.FacultyController.listFaculty
GET		/showFaculty/:id						controllers.FacultyController.showFaculty(id: Long)
GET 	/editFaculty/:id						controllers.FacultyController.editFaculty(id: Long)
GET 	/createFaculty							controllers.FacultyController.createFaculty
POST	/deleteFaculty/:id						controllers.FacultyController.deleteFaculty(id: Long)
POST 	/saveFaculty/:newEntry					controllers.FacultyController.saveFaculty(newEntry: Int)
GET 	/uploadFaculty			   				controllers.FacultyController.uploadFaculty
GET 	/newFacultyPhoto/:facultyId			   	controllers.FacultyController.newFacultyPhoto(facultyId: Long)
POST 	/postFaculty/:newEntry				 	controllers.FacultyController.postFaculty(newEntry: Int)
POST 	/postNewFacultyPicture/:facultyId		controllers.FacultyController.postNewFacultyPicture(facultyId: Long)


# Topics Routes
GET		/homeTopics/:id							controllers.TopicsController.homeTopics(id: Long)
GET     /listTopics								controllers.TopicsController.listTopics
GET		/showTopics/:id							controllers.TopicsController.showTopics(id: Long)
GET 	/editTopics/:id							controllers.TopicsController.editTopics(id: Long)
GET 	/createTopics							controllers.TopicsController.createTopics
POST	/deleteTopics/:id						controllers.TopicsController.deleteTopics(id: Long)
POST 	/saveTopics/:newEntry					controllers.TopicsController.saveTopics(newEntry: Int)


# TopicReferences Routes
GET     /listTopicSelectedReferences/:topicId	controllers.TopicReferencesController.listSelectedTopicReferences(topicId: Long)
GET		/showTopicReferences/:id				controllers.TopicReferencesController.showTopicReferences(id: Long)
GET 	/editTopicReferences/:id				controllers.TopicReferencesController.editTopicReferences(id: Long)
GET 	/createTopicReferences/:topicId			controllers.TopicReferencesController.createTopicReferences(topicId: Long)
POST	/deleteTopicReferences/:id				controllers.TopicReferencesController.deleteTopicReferences(id: Long)
POST 	/saveTopicReferences/:newEntry			controllers.TopicReferencesController.saveTopicReferences(newEntry: Int)

# TopicPicture Routes
GET     /listSelectedTopicPicture/:topicId		controllers.TopicPictureController.listSelectedTopicPicture(topicId: Long)
GET		/showTopicPicture/:id					controllers.TopicPictureController.showTopicPicture(id: Long)
GET 	/editTopicPicture/:id					controllers.TopicPictureController.editTopicPicture(id: Long)
GET 	/createTopicPicture/:topicId			controllers.TopicPictureController.createTopicPicture(topicId: Long)
GET 	/uploadTopicPicture/:topicId			controllers.TopicPictureController.uploadTopicPicture(topicId: Long)
POST	/deleteTopicPicture/:id					controllers.TopicPictureController.deleteTopicPicture(id: Long)
POST 	/saveTopicPicture/:newEntry				controllers.TopicPictureController.saveTopicPicture(newEntry: Int)
POST 	/postTopicPicture/:newEntry				controllers.TopicPictureController.postTopicPicture(newEntry: Int)

# TopicLink Routes
GET     /listSelectedTopicLink/:topicId			controllers.TopicLinkController.listSelectedTopicLink(topicId: Long)
GET		/showTopicLink/:id						controllers.TopicLinkController.showTopicLink(id: Long)
GET 	/editTopicLink/:id						controllers.TopicLinkController.editTopicLink(id: Long)
GET 	/createTopicLink/:topicId				controllers.TopicLinkController.createTopicLink(topicId: Long)
POST	/deleteTopicLink/:id					controllers.TopicLinkController.deleteTopicLink(id: Long)
POST 	/saveTopicLink/:newEntry				controllers.TopicLinkController.saveTopicLink(newEntry: Int)

# Reference Routes
GET     /listReference							controllers.ReferenceController.listReference
GET		/showReference/:id						controllers.ReferenceController.showReference(id: Long)
GET 	/editReference/:id						controllers.ReferenceController.editReference(id: Long)
GET 	/createReference						controllers.ReferenceController.createReference
POST	/deleteReference/:id					controllers.ReferenceController.deleteReference(id: Long)
POST 	/saveReference/:newEntry				controllers.ReferenceController.saveReference(newEntry: Int)
GET 	/uploadReferenceFile					controllers.ReferenceController.uploadReferenceFile
POST 	/postReferenceFile/:newEntry			controllers.ReferenceController.postReferenceFile(newEntry: Int)

# Picture Routes
GET     /listPicture							controllers.PictureController.listPicture
GET		/showPicture/:id						controllers.PictureController.showPicture(id: Long)
GET 	/editPicture/:id						controllers.PictureController.editPicture(id: Long)
GET 	/createPicture							controllers.PictureController.createPicture
POST	/deletePicture/:id						controllers.PictureController.deletePicture(id: Long)
POST 	/savePicture/:newEntry					controllers.PictureController.savePicture(newEntry: Int)


# Departments Routes
GET     /listDepartments						controllers.DepartmentsController.listDepartments
GET		/showDepartments/:id					controllers.DepartmentsController.showDepartments(id: Long)
GET 	/editDepartments/:id					controllers.DepartmentsController.editDepartments(id: Long)
GET 	/createDepartments						controllers.DepartmentsController.createDepartments
POST	/deleteDepartments/:id					controllers.DepartmentsController.deleteDepartments(id: Long)
POST 	/saveDepartments/:newEntry				controllers.DepartmentsController.saveDepartments(newEntry: Int)


# Programs Routes
GET     /listPrograms/:id							controllers.ProgramsController.list(id: Long)
GET		/showPrograms/:id						controllers.ProgramsController.show(id: Long)
GET 	/editPrograms/:id						controllers.ProgramsController.edit(id: Long)
GET 	/createPrograms/:id						controllers.ProgramsController.create(id: Long)
POST	/deletePrograms/:id						controllers.ProgramsController.delete(id: Long)
POST 	/savePrograms/:newEntry					controllers.ProgramsController.save(newEntry: Int)


# TopicObjectives Routes
GET     /listSelectedTopicObjectives/:topicId	controllers.TopicObjectivesController.listSelectedTopicObjectives(topicId: Long)
GET		/showTopicObjectives/:id				controllers.TopicObjectivesController.showTopicObjectives(id: Long)
GET 	/editTopicObjectives/:id				controllers.TopicObjectivesController.editTopicObjectives(id: Long)
GET 	/createTopicObjectives/:topicId			controllers.TopicObjectivesController.createTopicObjectives(topicId: Long)
POST	/deleteTopicObjectives/:id				controllers.TopicObjectivesController.deleteTopicObjectives(id: Long)
POST 	/saveTopicObjectives/:newEntry			controllers.TopicObjectivesController.saveTopicObjectives(newEntry: Int)

# CourseLinks Routes
GET     /listCourseLinks/:courseId				controllers.CourseLinksController.listCourseLinks(courseId: Long)
GET		/showCourseLinks/:id					controllers.CourseLinksController.showCourseLinks(id: Long)
GET 	/editCourseLinks/:id					controllers.CourseLinksController.editCourseLinks(id: Long)
GET 	/createCourseLinks/:courseId			controllers.CourseLinksController.createCourseLinks(courseId: Long)
GET 	/uploadCourseFile/:courseId				controllers.CourseLinksController.uploadCourseFile(courseId: Long)
POST	/deleteCourseLinks/:id					controllers.CourseLinksController.deleteCourseLinks(id: Long)
POST 	/saveCourseLinks/:newEntry				controllers.CourseLinksController.saveCourseLinks(newEntry: Int)
POST 	/postCourseFile/:newEntry				controllers.CourseLinksController.postCourseFile(newEntry: Int)

# CourseReferences Routes
GET     /listCourseReferences/:courseId			controllers.CourseReferencesController.listCourseReferences(courseId: Long)
GET		/showCourseReferences/:id				controllers.CourseReferencesController.showCourseReferences(id: Long)
GET 	/editCourseReferences/:id				controllers.CourseReferencesController.editCourseReferences(id: Long)
GET 	/createCourseReferences/:courseId		controllers.CourseReferencesController.createCourseReferences(courseId: Long)
POST	/deleteCourseReferences/:id				controllers.CourseReferencesController.deleteCourseReferences(id: Long)
POST 	/saveCourseReferences/:newEntry			controllers.CourseReferencesController.saveCourseReferences(newEntry: Int)

# Authentication
POST    /login                      			controllers.LoginController.authenticate
GET     /logout                    				controllers.LoginController.logout
GET		/login									controllers.LoginController.login

# User Routes
GET     /listUser							controllers.UserController.listUser
GET		/showUser/:id						controllers.UserController.showUser(id: String)
GET 	/editUser/:id						controllers.UserController.editUser(id: String)
GET 	/createUser							controllers.UserController.createUser
POST	/deleteUser/:id						controllers.UserController.deleteUser(id: String)
POST 	/saveUser/:newEntry					controllers.UserController.saveUser(newEntry: Int)
GET	    /fileManagement						controllers.UserController.fileManagement

# LessonLinks Routes
GET     /listLessonLinks/:idLessons			controllers.LessonLinksController.list(idLessons: Long)
GET		/showLessonLinks/:id				controllers.LessonLinksController.show(id: Long)
GET 	/editLessonLinks/:id				controllers.LessonLinksController.edit(id: Long)
GET 	/createLessonLinks/:idLessons					controllers.LessonLinksController.create(idLessons: Long)
POST	/deleteLessonLinks/:id				controllers.LessonLinksController.delete(id: Long)
POST 	/saveLessonLinks/:newEntry			controllers.LessonLinksController.save(newEntry: Int)
GET 	/uploadLessonFile/:lessonId			controllers.LessonLinksController.uploadLessonFile(lessonId: Long)
POST 	/postLessonFile/:newEntry			controllers.LessonLinksController.postLessonFile(newEntry: Int)


# LessonLinkTopicObjectives Routes
GET     /listLessonLinkTopicObjectives/:idLessonLinks		controllers.LessonLinkTopicObjectivesController.listLessonLinkTopicObjectives(idLessonLinks: Long)
GET		/showLessonLinkTopicObjectives/:id					controllers.LessonLinkTopicObjectivesController.showLessonLinkTopicObjectives(id: Long)
GET 	/editLessonLinkTopicObjectives/:id					controllers.LessonLinkTopicObjectivesController.editLessonLinkTopicObjectives(id: Long)
GET 	/createLessonLinkTopicObjectives/:idLessonLinks		controllers.LessonLinkTopicObjectivesController.createLessonLinkTopicObjectivesList(idLessonLinks: Long)
GET 	/getLessonLinkKSAJsonByTopic/:idLessonLink/:idTopic	controllers.LessonLinkTopicObjectivesController.getLessonLinkKSAJsonByTopic(idLessonLink: Long, idTopic: Long)
POST	/deleteLessonLinkTopicObjectives/:id				controllers.LessonLinkTopicObjectivesController.deleteLessonLinkTopicObjectives(id: Long)
POST 	/saveLessonLinkTopicObjectives/:newEntry			controllers.LessonLinkTopicObjectivesController.saveLessonLinkTopicObjectives(newEntry: Int)
POST 	/saveLessonLinkTopicObjectivesList					controllers.LessonLinkTopicObjectivesController.saveLessonLinkTopicObjectivesList

# LessonTopicObjectives Routes
GET     /listLessonTopicObjectives/:idLessons	  			controllers.LessonTopicObjectivesController.listLessonTopicObjectives(idLessons: Long)
GET		/showLessonTopicObjectives/:id						controllers.LessonTopicObjectivesController.showLessonTopicObjectives(id: Long)
GET 	/editLessonTopicObjectives/:id						controllers.LessonTopicObjectivesController.editLessonTopicObjectives(id: Long)
GET 	/createLessonTopicObjectives/:idLessons				controllers.LessonTopicObjectivesController.createLessonTopicObjectives(idLessons: Long)
GET 	/createLessonTopicObjectivesList/:idLessons			controllers.LessonTopicObjectivesController.createLessonTopicObjectivesList(idLessons: Long)
GET 	/getTopicObjectivesJson/:id							controllers.LessonTopicObjectivesController.getTopicObjectivesJson(id: Long)
GET 	/getLessonKSAJsonByTopic/:idLesson/:idTopic			controllers.LessonTopicObjectivesController.getLessonKSAJsonByTopic(idLesson: Long, idTopic: Long)
POST	/deleteLessonTopicObjectives/:id					controllers.LessonTopicObjectivesController.deleteLessonTopicObjectives(id: Long)
POST 	/saveLessonTopicObjectives/:newEntry				controllers.LessonTopicObjectivesController.saveLessonTopicObjectives(newEntry: Int)
POST 	/saveLessonTopicObjectivesList						controllers.LessonTopicObjectivesController.saveLessonTopicObjectivesList

# Lessons Routes
GET     /listLessons/:idCourses					controllers.LessonsController.listLessons(idCourses: Long)
GET		/showLessons/:id						controllers.LessonsController.showLessons(id: Long)
GET 	/editLessons/:id						controllers.LessonsController.editLessons(id: Long)
GET 	/createLessons/:idCourses				controllers.LessonsController.createLessons(idCourses: Long)
POST	/deleteLessons/:id						controllers.LessonsController.deleteLessons(id: Long)
POST 	/saveLessons/:newEntry					controllers.LessonsController.saveLessons(newEntry: Int)

# CourseOfferings Routes
GET     /listCourseOfferings						controllers.CourseOfferingsController.listCourseOfferings
GET		/showCourseOfferings/:id					controllers.CourseOfferingsController.showCourseOfferings(id: Long)
GET 	/editCourseOfferings/:id					controllers.CourseOfferingsController.editCourseOfferings(id: Long)
GET 	/createCourseOfferings					controllers.CourseOfferingsController.createCourseOfferings
POST	/deleteCourseOfferings/:id				controllers.CourseOfferingsController.deleteCourseOfferings(id: Long)
POST 	/saveCourseOfferings/:newEntry			controllers.CourseOfferingsController.saveCourseOfferings(newEntry: Int)

# CourseTopics Routes
GET     /listCourseTopics						controllers.CourseTopicsController.listCourseTopics
GET		/showCourseTopics/:courseId				controllers.CourseTopicsController.showCourseTopics(courseId: Long)
GET		/showTopicsCourses/:topicId				controllers.CourseTopicsController.showTopicsCourses(topicId: Long)

# LessonDate Routes
GET     /listLessonDate						controllers.LessonDateController.listLessonDate
GET		/showLessonDate/:id					controllers.LessonDateController.showLessonDate(id: Long)
GET 	/editLessonDate/:id					controllers.LessonDateController.editLessonDate(id: Long)
GET 	/createLessonDate					controllers.LessonDateController.createLessonDate
POST	/deleteLessonDate/:id				controllers.LessonDateController.deleteLessonDate(id: Long)
POST 	/saveLessonDate/:newEntry			controllers.LessonDateController.saveLessonDate(newEntry: Int)

# ProgramOutcomes Routes
GET     /listProgramOutcomes/:idPrograms						controllers.ProgramOutcomesController.list(idPrograms: Long)
GET		/showProgramOutcomes/:id					controllers.ProgramOutcomesController.show(id: Long)
GET 	/editProgramOutcomes/:id					controllers.ProgramOutcomesController.edit(id: Long)
GET 	/createProgramOutcomes/:idPrograms					controllers.ProgramOutcomesController.create(idPrograms: Long)
POST	/deleteProgramOutcomes/:id				controllers.ProgramOutcomesController.delete(id: Long)
POST 	/saveProgramOutcomes/:newEntry			controllers.ProgramOutcomesController.save(newEntry: Int)

# GradedRequirements Routes
GET     /listGradedRequirements/:idCourses						controllers.GradedRequirementsController.list(idCourses: Long)
GET		/showGradedRequirements/:id					controllers.GradedRequirementsController.show(id: Long)
GET 	/editGradedRequirements/:id					controllers.GradedRequirementsController.edit(id: Long)
GET 	/createGradedRequirements/:idCourses					controllers.GradedRequirementsController.create(idCourses: Long)
POST	/deleteGradedRequirements/:id				controllers.GradedRequirementsController.delete(id: Long)
POST 	/saveGradedRequirements/:newEntry			controllers.GradedRequirementsController.save(newEntry: Int)

# SubGradedEvent Routes
GET     /listSubGradedEvent/:idGradedRequirements						controllers.SubGradedEventController.list(idGradedRequirements: Long)
GET		/showSubGradedEvent/:id					controllers.SubGradedEventController.show(id: Long)
GET 	/editSubGradedEvent/:id					controllers.SubGradedEventController.edit(id: Long)
GET 	/createSubGradedEvent/:idGradedRequirements					controllers.SubGradedEventController.create(idGradedRequirements: Long)
POST	/deleteSubGradedEvent/:id				controllers.SubGradedEventController.delete(id: Long)
POST 	/saveSubGradedEvent/:newEntry			controllers.SubGradedEventController.save(newEntry: Int)

# KSAGradedEvent Routes
GET     /listKSAGradedEvent/:idGradedRequirements						controllers.KSAGradedEventController.list(idGradedRequirements: Long)
GET		/showKSAGradedEvent/:id					controllers.KSAGradedEventController.show(id: Long)
GET 	/editKSAGradedEvent/:id					controllers.KSAGradedEventController.edit(id: Long)
GET 	/createKSAGradedEvent/:idGradedRequirements					controllers.KSAGradedEventController.create(idGradedRequirements: Long)
GET 	/getGradedEventKSAJsonByTopic/:idGradedEvent/:idTopic	controllers.KSAGradedEventController.getGradedEventKSAJsonByTopic(idGradedEvent: Long, idTopic: Long)
POST	/deleteKSAGradedEvent/:id				controllers.KSAGradedEventController.delete(id: Long)
POST 	/saveKSAGradedEvent/:newEntry			controllers.KSAGradedEventController.save(newEntry: Int)
POST 	/saveKSAGradedEventList/			controllers.KSAGradedEventController.saveList

# KSASubGradedEvent Routes
GET     /listKSASubGradedEvent/:idSubGradedEvent						controllers.KSASubGradedEventController.list(idSubGradedEvent: Long)
GET		/showKSASubGradedEvent/:id					controllers.KSASubGradedEventController.show(id: Long)
GET 	/editKSASubGradedEvent/:id					controllers.KSASubGradedEventController.edit(id: Long)
GET 	/createKSASubGradedEvent/:idSubGradedEvent					controllers.KSASubGradedEventController.create(idSubGradedEvent: Long)
GET 	/getSubGradedEventKSAJsonByTopic/:idSubGradedEvent/:idTopic	controllers.KSASubGradedEventController.getSubGradedEventKSAJsonByTopic(idSubGradedEvent: Long, idTopic: Long)
POST	/deleteKSASubGradedEvent/:id				controllers.KSASubGradedEventController.delete(id: Long)
POST 	/saveKSASubGradedEvent/:newEntry			controllers.KSASubGradedEventController.save(newEntry: Int)
POST 	/saveKSASubGradedEventList					controllers.KSASubGradedEventController.saveList


# KSAPerfIndicator Routes
GET     /listKSAPerfIndicator/:idTerminalLearningObjective						controllers.KSAPerfIndicatorController.list(idTerminalLearningObjective: Long)
GET		/showKSAPerfIndicator/:id					controllers.KSAPerfIndicatorController.show(id: Long)
GET 	/editKSAPerfIndicator/:id					controllers.KSAPerfIndicatorController.edit(id: Long)
GET 	/createKSAPerfIndicator/:idTerminalLearningObjective					controllers.KSAPerfIndicatorController.create(idTerminalLearningObjective: Long)
POST	/deleteKSAPerfIndicator/:id				controllers.KSAPerfIndicatorController.delete(id: Long)
POST 	/saveKSAPerfIndicator/:newEntry			controllers.KSAPerfIndicatorController.save(newEntry: Int)
POST 	/saveKSAPerfIndicatorList					controllers.KSAPerfIndicatorController.saveList
GET    /getKSAJsonByTopic/:idPerfIndicator/:idTopic		controllers.KSAPerfIndicatorController.getKSAJsonByTopic(idPerfIndicator: Long, idTopic: Long)

# GradedRequirementLinks Routes
GET     /listGradedRequirementLinks/:idGradedRequirements						controllers.GradedRequirementLinksController.list(idGradedRequirements: Long)
GET		/showGradedRequirementLinks/:id					controllers.GradedRequirementLinksController.show(id: Long)
GET 	/editGradedRequirementLinks/:id					controllers.GradedRequirementLinksController.edit(id: Long)
GET 	/createGradedRequirementLinks/:idGradedRequirements					controllers.GradedRequirementLinksController.create(idGradedRequirements: Long)
GET 	/uploadGradedRequirementFile/:idGradedRequirements					controllers.GradedRequirementLinksController.uploadGradedEventFile(idGradedRequirements: Long)
POST	/deleteGradedRequirementLinks/:id				controllers.GradedRequirementLinksController.delete(id: Long)
POST 	/saveGradedRequirementLinks/:newEntry			controllers.GradedRequirementLinksController.save(newEntry: Int)
POST 	/postGradedRequirementFile/:newEntry				controllers.GradedRequirementLinksController.postFile(newEntry: Int)


# ProgramEducationalObjectives Routes
GET     /listProgramEducationalObjectives/:idPrograms						controllers.ProgramEducationalObjectivesController.list(idPrograms: Long)
GET		/showProgramEducationalObjectives/:id					controllers.ProgramEducationalObjectivesController.show(id: Long)
GET 	/editProgramEducationalObjectives/:id					controllers.ProgramEducationalObjectivesController.edit(id: Long)
GET 	/createProgramEducationalObjectives/:idPrograms					controllers.ProgramEducationalObjectivesController.create(idPrograms: Long)
POST	/deleteProgramEducationalObjectives/:id				controllers.ProgramEducationalObjectivesController.delete(id: Long)
POST 	/saveProgramEducationalObjectives/:newEntry			controllers.ProgramEducationalObjectivesController.save(newEntry: Int)

# PEOtoSLO Routes
GET     /listPEOtoSLO/:idProgramEducationalObjectives						controllers.PEOtoSLOController.list(idProgramEducationalObjectives: Long)
GET		/showPEOtoSLO/:id					controllers.PEOtoSLOController.show(id: Long)
GET 	/editPEOtoSLO/:id					controllers.PEOtoSLOController.edit(id: Long)
GET 	/createPEOtoSLO/:idProgramEducationalObjectives					controllers.PEOtoSLOController.create(idProgramEducationalObjectives: Long)
GET    /getSLOJsonByPEOandProgram/:idPEO/:idProgram		controllers.PEOtoSLOController.getSLOJsonByPEOandProgram(idPEO: Long, idProgram: Long)
POST	/deletePEOtoSLO/:id				controllers.PEOtoSLOController.delete(id: Long)
POST 	/savePEOtoSLO/:newEntry			controllers.PEOtoSLOController.save(newEntry: Int)
POST 	/savePEOtoSLOList					controllers.PEOtoSLOController.saveList

# PerformanceIndicator Routes
GET     /listPerformanceIndicator/:idProgramOutcomes						controllers.PerformanceIndicatorController.list(idProgramOutcomes: Long)
GET		/showPerformanceIndicator/:id					controllers.PerformanceIndicatorController.show(id: Long)
GET 	/editPerformanceIndicator/:id					controllers.PerformanceIndicatorController.edit(id: Long)
GET 	/createPerformanceIndicator/:idProgramOutcomes					controllers.PerformanceIndicatorController.create(idProgramOutcomes: Long)
POST	/deletePerformanceIndicator/:id				controllers.PerformanceIndicatorController.delete(id: Long)
POST 	/savePerformanceIndicator/:newEntry			controllers.PerformanceIndicatorController.save(newEntry: Int)

# Definitions Routes
GET     /listDefinitions/:id						controllers.DefinitionsController.list(id: Long)
GET		/showDefinitions/:id					controllers.DefinitionsController.show(id: Long)
GET 	/editDefinitions/:id					controllers.DefinitionsController.edit(id: Long)
GET 	/createDefinitions/:id					controllers.DefinitionsController.create(id: Long)
POST	/deleteDefinitions/:id				controllers.DefinitionsController.delete(id: Long)
POST 	/saveDefinitions/:newEntry			controllers.DefinitionsController.save(newEntry: Int)

# CourseObjectives Routes
GET     /listCourseObjectives/:idCourses						controllers.CourseObjectivesController.list(idCourses: Long)
GET		/showCourseObjectives/:id					controllers.CourseObjectivesController.show(id: Long)
GET 	/editCourseObjectives/:id					controllers.CourseObjectivesController.edit(id: Long)
GET 	/createCourseObjectives/:idCourses					controllers.CourseObjectivesController.create(idCourses: Long)
POST	/deleteCourseObjectives/:id				controllers.CourseObjectivesController.delete(id: Long)
POST 	/saveCourseObjectives/:newEntry			controllers.CourseObjectivesController.save(newEntry: Int)

# RequiredCourses Routes
GET     /listRequiredCourses/:idPrograms						controllers.RequiredCoursesController.list(idPrograms: Long)
GET		/showRequiredCourses/:id					controllers.RequiredCoursesController.show(id: Long)
GET 	/editRequiredCourses/:id					controllers.RequiredCoursesController.edit(id: Long)
GET 	/createRequiredCourses/:idPrograms					controllers.RequiredCoursesController.create(idPrograms: Long)
POST	/deleteRequiredCourses/:id				controllers.RequiredCoursesController.delete(id: Long)
POST 	/saveRequiredCourses/:newEntry			controllers.RequiredCoursesController.save(newEntry: Int)

# ElectiveGroup Routes
GET     /listElectiveGroup/:idPrograms						controllers.ElectiveGroupController.list(idPrograms: Long)
GET		/showElectiveGroup/:id					controllers.ElectiveGroupController.show(id: Long)
GET 	/editElectiveGroup/:id					controllers.ElectiveGroupController.edit(id: Long)
GET 	/createElectiveGroup/:idPrograms					controllers.ElectiveGroupController.create(idPrograms: Long)
POST	/deleteElectiveGroup/:id				controllers.ElectiveGroupController.delete(id: Long)
POST 	/saveElectiveGroup/:newEntry			controllers.ElectiveGroupController.save(newEntry: Int)

# ElectiveGroupCourse Routes
GET     /listElectiveGroupCourse/:idElectiveGroup						controllers.ElectiveGroupCourseController.list(idElectiveGroup: Long)
GET		/showElectiveGroupCourse/:id					controllers.ElectiveGroupCourseController.show(id: Long)
GET 	/editElectiveGroupCourse/:id					controllers.ElectiveGroupCourseController.edit(id: Long)
GET 	/createElectiveGroupCourse/:idElectiveGroup					controllers.ElectiveGroupCourseController.create(idElectiveGroup: Long)
POST	/deleteElectiveGroupCourse/:id				controllers.ElectiveGroupCourseController.delete(id: Long)
POST 	/saveElectiveGroupCourse/:newEntry			controllers.ElectiveGroupCourseController.save(newEntry: Int)

# GradedEventAMS Routes
GET     /listGradedEventAMS/:idCourses						controllers.GradedEventAMSController.list(idCourses: Long)
GET     /listAllGradedEventAMS						controllers.GradedEventAMSController.listAll
GET		/showGradedEventAMS/:id					controllers.GradedEventAMSController.show(id: Long)
GET 	/editGradedEventAMS/:id					controllers.GradedEventAMSController.edit(id: Long)
GET 	/createGradedEventAMS/:idCourses					controllers.GradedEventAMSController.create(idCourses: Long)
POST	/deleteGradedEventAMS/:id				controllers.GradedEventAMSController.delete(id: Long)
POST 	/saveGradedEventAMS/:newEntry			controllers.GradedEventAMSController.save(newEntry: Int)
GET		/uploadGradedEventAMS					controllers.GradedEventAMSController.uploadGradedEventsAMS
POST	/saveGradedEventAMSUpload				controllers.GradedEventAMSController.saveGradedEventAMSUpload

# GradesAMS Routes
GET     /listGradesAMS/:idGradedEventAMS						controllers.GradesAMSController.list(idGradedEventAMS: Long)
GET     /listAllGradesAMS						controllers.GradesAMSController.listAll
GET		/showGradesAMS/:id					controllers.GradesAMSController.show(id: Long)
GET 	/editGradesAMS/:id					controllers.GradesAMSController.edit(id: Long)
GET 	/createGradesAMS/:idGradedEventAMS					controllers.GradesAMSController.create(idGradedEventAMS: Long)
POST	/deleteGradesAMS/:id				controllers.GradesAMSController.delete(id: Long)
GET 	/uploadGradesAMS					controllers.GradesAMSController.uploadGradesAMS
POST 	/saveGradesAMS/:newEntry			controllers.GradesAMSController.save(newEntry: Int)
POST	/sameGradesAMSUpload				controllers.GradesAMSController.saveGradesAMSUpload

# GradesSubEventAMS Routes
GET     /listGradesSubEventAMS/:idSubEventAMS						controllers.GradesSubEventAMSController.list(idSubEventAMS: Long)
GET     /listAllGradesSubEventAMS/:errors						controllers.GradesSubEventAMSController.listAll(errors: String)
GET		/showGradesSubEventAMS/:id					controllers.GradesSubEventAMSController.show(id: Long)
GET 	/editGradesSubEventAMS/:id					controllers.GradesSubEventAMSController.edit(id: Long)
GET 	/createGradesSubEventAMS/:idSubEventAMS					controllers.GradesSubEventAMSController.create(idSubEventAMS: Long)
POST	/deleteGradesSubEventAMS/:id				controllers.GradesSubEventAMSController.delete(id: Long)
GET 	/uploadGradesSubEventAMS					controllers.GradesSubEventAMSController.uploadGradesSubEventAMS
POST 	/saveGradesSubEventAMS/:newEntry			controllers.GradesSubEventAMSController.save(newEntry: Int)
POST	/saveGradesSubEventAMSUpload				controllers.GradesSubEventAMSController.saveGradesSubEventAMSUpload

# Students Routes
GET     /listStudents/:id						controllers.StudentsController.list(id: Long)
GET		/showStudents/:id					controllers.StudentsController.show(id: Long)
GET 	/editStudents/:id					controllers.StudentsController.edit(id: Long)
GET 	/createStudents/:id					controllers.StudentsController.create(id: Long)
POST	/deleteStudents/:id				controllers.StudentsController.delete(id: Long)
POST 	/saveStudents/:newEntry			controllers.StudentsController.save(newEntry: Int)
GET		/uploadStudents					controllers.StudentsController.uploadStudents
POST	/saveStudentUpload				controllers.StudentsController.saveStudentUpload
GET		/selectUploadType				controllers.StudentsController.selectUploadType

# SubEventAMS Routes
GET     /listSubEventAMS/:idGradedEventAMS						controllers.SubEventAMSController.list(idGradedEventAMS: Long)
GET     /listAllSubEventAMS					 	controllers.SubEventAMSController.listAll
GET		/showSubEventAMS/:id					controllers.SubEventAMSController.show(id: Long)
GET 	/editSubEventAMS/:id					controllers.SubEventAMSController.edit(id: Long)
GET 	/createSubEventAMS/:idGradedEventAMS					controllers.SubEventAMSController.create(idGradedEventAMS: Long)
POST	/deleteSubEventAMS/:id				controllers.SubEventAMSController.delete(id: Long)
POST 	/saveSubEventAMS/:newEntry			controllers.SubEventAMSController.save(newEntry: Int)
GET		/uploadSubEventsAMS					controllers.SubEventAMSController.uploadSubEventsAMS
POST	/saveSubEventAMSUpload				controllers.SubEventAMSController.saveSubEventAMSUpload

# MappingGradedEvent Routes
GET     /listMappingGradedEvent/:id						controllers.MappingGradedEventController.list(id: Long)
GET		/showMappingGradedEvent/:id					controllers.MappingGradedEventController.show(id: Long)
GET 	/editMappingGradedEvent/:id					controllers.MappingGradedEventController.edit(id: Long)
GET 	/createMappingGradedEvent/:id					controllers.MappingGradedEventController.create(id: Long)
GET 	/createNewMappingGradedEvent/:id					controllers.MappingGradedEventController.createNewMapping(id: Long)
POST	/deleteMappingGradedEvent/:id				controllers.MappingGradedEventController.delete(id: Long)
POST 	/saveMappingGradedEvent/:newEntry			controllers.MappingGradedEventController.save(newEntry: Int)

# MappingSubEvent Routes
GET     /listMappingSubEvent/:id						controllers.MappingSubEventController.list(id: Long)
GET		/showMappingSubEvent/:id					controllers.MappingSubEventController.show(id: Long)
GET 	/editMappingSubEvent/:id					controllers.MappingSubEventController.edit(id: Long)
GET 	/createMappingSubEvent/:id					controllers.MappingSubEventController.create(id: Long)
GET 	/createNewMappingSubEvent/:id					controllers.MappingSubEventController.createNewSubEventMapping(id: Long)
POST	/deleteMappingSubEvent/:id				controllers.MappingSubEventController.delete(id: Long)
POST 	/saveMappingSubEvent/:newEntry			controllers.MappingSubEventController.save(newEntry: Int)

# KSASubEventAMS Routes
GET     /listKSASubEventAMS/:idSubEventAMS						controllers.KSASubEventAMSController.list(idSubEventAMS: Long)
GET		/showKSASubEventAMS/:id					controllers.KSASubEventAMSController.show(id: Long)
GET 	/editKSASubEventAMS/:id					controllers.KSASubEventAMSController.edit(id: Long)
GET 	/createKSASubEventAMS/:idSubEventAMS					controllers.KSASubEventAMSController.create(idSubEventAMS: Long)
POST	/deleteKSASubEventAMS/:id				controllers.KSASubEventAMSController.delete(id: Long)
POST 	/saveKSASubEventAMS/:newEntry			controllers.KSASubEventAMSController.save(newEntry: Int)


# GradedEventAMSLinks Routes
GET     /listGradedEventAMSLinks/:idGradedEventAMS						controllers.GradedEventAMSLinksController.list(idGradedEventAMS: Long)
GET		/showGradedEventAMSLinks/:id					controllers.GradedEventAMSLinksController.show(id: Long)
GET 	/editGradedEventAMSLinks/:id					controllers.GradedEventAMSLinksController.edit(id: Long)
GET 	/createGradedEventAMSLinks/:idGradedEventAMS					controllers.GradedEventAMSLinksController.create(idGradedEventAMS: Long)
POST	/deleteGradedEventAMSLinks/:id				controllers.GradedEventAMSLinksController.delete(id: Long)
POST 	/saveGradedEventAMSLinks/:newEntry			controllers.GradedEventAMSLinksController.save(newEntry: Int)
GET 	/uploadGradedEventAMSFile/:idGradedEventAMS					controllers.GradedEventAMSLinksController.uploadGradedEventFile(idGradedEventAMS: Long)
POST 	/postGradedEventAMSFile/:newEntry				controllers.GradedEventAMSLinksController.postFile(newEntry: Int)
